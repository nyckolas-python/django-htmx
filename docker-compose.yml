version: '3.3'

volumes:
  postgres_data:
  static_data:
  media_data:

networks:
  backend-net:

services:
  db:
    image: postgres:13.0-alpine
    container_name: ecommerce-db
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  backend:
    build: ./core
    container_name: ecommerce-backend
    env_file: .env
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    depends_on:
      - db
    ports:
      - 8000:8000
    links:
      - db
    restart: always
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py collectstatic --noinput &&
                    gunicorn project.wsgi:application --bind 0.0.0.0:8000"
    develop:
      watch:
        - action: rebuild
          path: .

  stripe-cli:
    image: stripe/stripe-cli:latest
    container_name: stripe-cli
    command: listen --forward-to backend:8000/payment/webhook-stripe/
    depends_on:
      - backend
    restart: always
    networks:
      - backend-net

  redis:
    image: redis:7.2.3-alpine
    container_name: ecommerce-redis
    restart: unless-stopped

  celery:
    build: ./core
    container_name: ecommerce-celery
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - static_data:/app/static
    restart: always
    command: celery -A project worker --loglevel=info

  celery-beat:
    build: ./core
    container_name: ecommerce-celery-beat
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - static_data:/app/static
    restart: always
    command: python -m celery -A project beat --loglevel=info

  nginx:
    image: nginx:latest
    container_name: ecommerce-nginx
    depends_on:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_data:/app/static
      - media_data:/app/media
    ports:
      - 80:80
    restart: always